plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.serialization)
    /*id("kotlin-kapt") // Required for Hilt*/
    alias(libs.plugins.hilt.android) // Apply the Hilt plugin
    alias(libs.plugins.google.services)
    alias(libs.plugins.crashlytics)
    id("com.google.devtools.ksp") version "2.1.10-1.0.31"

}

android {
    namespace 'com.example.taskmanager'
    compileSdk 35

    defaultConfig {
        applicationId "com.example.taskmanager"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
        buildConfig = true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    // Core Android dependencies
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation platform(libs.kotlin.bom)
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    // Compose
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    // Hilt
    implementation libs.hilt.android
    implementation libs.androidx.multidex
    ksp(libs.google.hilt.compiler)
    implementation(libs.androidx.hilt.navigation.compose)
    // Room
    implementation(libs.androidx.room.runtime)
    implementation(libs.androidx.room.ktx)
    ksp(libs.androidx.room.compiler)

    // Coroutines and Flow
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.coroutines.android)

    // WorkManager
    implementation(libs.androidx.work.runtime.ktx)
    implementation(libs.androidx.hilt.work)
    // Firebase
    implementation(platform(libs.firebase.bom))
    implementation(libs.firebase.crashlytics)
    implementation(libs.firebase.auth.ktx)
    implementation(libs.firebase.firestore.ktx)
    implementation(libs.play.services.auth)

    // Icons
    implementation(libs.androidx.material.icons.core) // Dependencia base (normalmente ya está)
    implementation(libs.androidx.material.icons.extended)
    // ¡Añade o verifica esta! Revisa la última versión

    // Timber
    implementation(libs.timber)

    // Google Fonts
    implementation(libs.androidx.ui.text.google.fonts)

    // Serialization
    implementation(libs.kotlinx.serialization.json)

    // For instrumentation tests
    androidTestImplementation libs.hilt.android.testing
    kspTest(libs.google.hilt.compiler)

    // For local unit tests
    testImplementation libs.hilt.android.testing
    kspTest(libs.google.hilt.compiler)


    // Testing
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
}
